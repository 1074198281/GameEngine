# add algorithm files
file(GLOB ALGORITHM_HEADER_FILES  ${CMAKE_CURRENT_SOURCE_DIR}/Algorithm/*.h ${CMAKE_CURRENT_SOURCE_DIR}/Algorithm/*.hpp)
file(GLOB ALGORITHM_SOURCE_FILES  ${CMAKE_CURRENT_SOURCE_DIR}/Algorithm/*.cpp)

source_group(include/Algorithm FILES ${ALGORITHM_HEADER_FILES})
source_group(src/Algorithm FILES ${ALGORITHM_SOURCE_FILES})

# add common files
file(GLOB COMMON_HEADER_FILES  ${CMAKE_CURRENT_SOURCE_DIR}/Common/*.h ${CMAKE_CURRENT_SOURCE_DIR}/Common/*.hpp)
file(GLOB COMMON_SOURCE_FILES  ${CMAKE_CURRENT_SOURCE_DIR}/Common/*.cpp)

source_group(include/Common FILES ${COMMON_HEADER_FILES})
source_group(src/Common FILES ${COMMON_SOURCE_FILES})

# add math calc files
file(GLOB MATH_HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/GeomMath/*.hpp ${CMAKE_CURRENT_SOURCE_DIR}/GeomMath/*.h)
file(GLOB MATH_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/GeomMath/*.cpp )

source_group(include/Math FILES ${MATH_HEADER_FILES})
source_group(src/Math FILES ${MATH_SOURCE_FILES})

# add Interface files
file(GLOB INTERFACE_HEADER_FILES  ${CMAKE_CURRENT_SOURCE_DIR}/Interface/*.h ${CMAKE_CURRENT_SOURCE_DIR}/Interface/*.hpp)

source_group(include/Interface FILES ${INTERFACE_HEADER_FILES})

# add Manager files

file(GLOB MANAGER_HEADER_FILES  ${CMAKE_CURRENT_SOURCE_DIR}/Manager/*.h ${CMAKE_CURRENT_SOURCE_DIR}/Manager/*.hpp)
file(GLOB MANAGER_SOURCE_FILES  ${CMAKE_CURRENT_SOURCE_DIR}/Manager/*.cpp)

source_group(include/Manager FILES ${MANAGER_HEADER_FILES})
source_group(src/Manager FILES ${MANAGER_SOURCE_FILES})

# add Parser files
file(GLOB PARSER_HEADER_FILES  ${CMAKE_CURRENT_SOURCE_DIR}/Parser/*.h ${CMAKE_CURRENT_SOURCE_DIR}/Parser/*.hpp)

source_group(include/Parser FILES ${PARSER_HEADER_FILES})

# add SceneGraph files
file(GLOB SCENEGRAPH_HEADER_FILES  ${CMAKE_CURRENT_SOURCE_DIR}/SceneGraph/*.h ${CMAKE_CURRENT_SOURCE_DIR}/SceneGraph/*.hpp)
file(GLOB SCENEGRAPH_SOURCE_FILES  ${CMAKE_CURRENT_SOURCE_DIR}/SceneGraph/*.cpp)

source_group(include/SceneGraph FILES ${SCENEGRAPH_HEADER_FILES})
source_group(src/SceneGraph FILES ${SCENEGRAPH_SOURCE_FILES})


# add library
add_library(Framework
${ALGORITHM_HEADER_FILES} ${ALGORITHM_SOURCE_FILES}
${COMMON_HEADER_FILES} ${COMMON_SOURCE_FILES}
${MATH_HEADER_FILES} ${MATH_SOURCE_FILES}
${INTERFACE_HEADER_FILES}
${MANAGER_HEADER_FILES} ${MANAGER_SOURCE_FILES}
${PARSER_HEADER_FILES}
${SCENEGRAPH_HEADER_FILES} ${SCENEGRAPH_SOURCE_FILES}
)

MESSAGE("DEBUG_FLAG")

if(DEBUG_FLAG EQUAL 1)
    MESSAGE("Using Debug External Library")
    target_link_libraries(Framework 
    ${BULLETLINEARMATH_DEBUG_LIBRARY}
    ${BULLETDYNAMICS_DEBUG_LIBRARY}
    ${BULLETCOLLISION_DEBUG_LIBRARY}
    ${IMGUI_DEBUG_LIBRARY})
elseif(DEBUG_FLAG EQUAL 0)
    MESSAGE("Using Release External Library")
    target_link_libraries(Framework 
    ${BULLETLINEARMATH_RELEASE_LIBRARY}
    ${BULLETDYNAMICS_RELEASE_LIBRARY}
    ${BULLETCOLLISION_RELEASE_LIBRARY}
    ${IMGUI_RELEASE_LIBRARY})
endif()